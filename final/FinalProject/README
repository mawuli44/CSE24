 IoT Smart Home System

## Overview
The IoT Smart Home System is a project developed in C# that allows users to remotely control and monitor various devices such as lights, thermostats, and security cameras. The system integrates sensors and actuators to automate tasks based on environmental conditions.

## Functionality
1. Control lights: Turn lights on/off, adjust brightness.
2. Control thermostats: Set temperature, control heating/cooling.
3. Control security cameras: View live feeds, record footage.
4. Automation: Set rules based on environmental conditions (e.g., motion detection, temperature) to automate device control.
5. User Interface: Develop a user-friendly interface for remote control and monitoring of devices.

## Architecture
- Central Control Hub: Acts as the main controller for the IoT devices and sensors.
- Device Classes: Define classes for different types of devices (e.g., Light, Thermostat, Camera) with specific responsibilities.
- Sensor Classes: Implement classes for sensors (e.g., Motion Sensor, Temperature Sensor) to gather environmental data.
- Actuator Classes: Implement classes for actuators (e.g., Relay, Servo Motor) to control devices based on user input or automation rules.

## Abstraction
- Abstraction is achieved through the use of interfaces (`IDevice` and `ISensor`) and abstract classes (`Device` and `Sensor`) to define common behaviors and functionalities shared among devices and sensors.

## Encapsulation
- Encapsulation is ensured by making member variables private and providing public methods for interaction with the objects. This hides internal details and allows controlled access to object state.

## Inheritance
- Inheritance is used to establish relationships between base classes and derived classes for code reuse. Specific device and sensor classes inherit common behavior and properties from abstract base classes.

## Polymorphism
- Polymorphism is demonstrated through method overriding in derived classes, allowing objects of different types to be treated uniformly. The central control hub interacts with devices and sensors without needing to know their specific implementations.

## Usage
1. Clone the repository.
2. Open the solution in Visual Studio or any C# IDE.
3. Run the `Program.cs` file.
4. The program will simulate the IoT Smart Home System, turning on devices, controlling them, and reading sensor data.

## Future Improvements
- Implement a graphical user interface (GUI) for better user interaction.
- Enhance automation capabilities with more sophisticated rule-setting mechanisms.
- Expand device and sensor types for broader compatibility and functionality.